/*
This is the main c++ programs method which is sellProduct of the Juice Machine. 

1. In this program the user only two chances to enter enough money to buy the product. 
2. The definition of the method sellProduct is rewritten so that it keeps prompting the 
   user to enter more money as long as the user has not entered enough money to buy the product. 
			
3. Also, a test program is writen to test the method.
*/ 
#include <iostream> //incldue input/output files;
#include "juiceMachine.cpp" //include juiceMachine.h file;
using namespace std; //use c++ name standards;

void displaySelection(); //prototype for choosing selection of type of juice;
void sellProduct(dispenserType& product,
cashRegister& pCounter);
int main()
{
cashRegister counter;
dispenserType orange(100, 50);
dispenserType apple(100, 65);
dispenserType mango(75, 80);
dispenserType strawberryBanana(100, 85);
int choice; //variable to hold the selection
showSelection();
cin >> choice;
while (choice != 9)
{
switch (choice)
{
case 1:
sellProduct(orange, counter);
break;
case 2:
sellProduct(apple, counter);
break;
case 3:
sellProduct(mango, counter);
break;
case 4:
sellProduct(strawberryBanana, counter);
break;
default:
cout << "You have entered an invalid selection." << endl;
}//end switch
displaySelection();
cin >> choice;
}//end while
return 0;
}//end main
void displaySelection()
{
cout << "*** Welcome to The Juice Shop ***" << endl;
cout << "To select an item, enter " << endl;
cout << "1 for orange juice (50 cents)" << endl;
cout << "2 for apple juice (65 cents)" << endl;
cout << "3 for mango juice (80 cents)" << endl;
cout << "4 for strawberry banana juice (85 cents)" << endl;
cout << "9 to exit" << endl;
}//end displaySelection

void sellProduct(dispenserType& product,
cashRegister& pCounter)
{
int amount; //variable to hold the amount entered
int amount2; //variable to hold the extra amount needed
if (product.getNoOfItems() > 0) //if dispenser is not empty
{
cout << "Please deposit " << product.getCost()
<< " cents" << endl;
cin >> amount;
while (amount < product.getCost())
{
cout << "Please deposit another "
<< product.getCost()- amount
<< " cents." << endl;
cin >> amount2;
amount = amount + amount2;
}
pCounter.acceptAmount(amount);
product.makeSale();
cout << "Collect your item at the bottom and enjoy." << endl;
}
else
cout << "Sorry, this item is sold out." << endl;
}//end sellProduct
